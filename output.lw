composition

import Fugue.AWS as AWS
import Fugue.AWS.EC2 as EC2


############################################################
# Region
#   From local AWS setting: us-west-2
############################################################
region: AWS.Us-west-2


############################################################
# VPC
#   Generated from AWS resource: vpc-dc8046ba
############################################################
ec2-vpc-1: EC2.Vpc.new {
  cidrBlock: "10.0.0.0/16",
  dhcpOptions: EC2.DhcpOptions.external("dopt-5ad7ee3f", region),
  instanceTenancy: EC2.DefaultTenancy,
  region: region,
  tags: [
    AWS.tag("Name", "Composer"),
  ],
}


############################################################
# Subnet
#   Generated from AWS resource: subnet-8de0f0ea
############################################################
ec2-subnet-1: EC2.Subnet.new {
  availabilityZone: AWS.A,
  cidrBlock: "10.0.1.0/24",
  defaultForAz: False,
  mapPublicIpOnLaunch: False,
  tags: [
    AWS.tag("Name", "Composer"),
  ],
  vpc: ec2-vpc-1,
}


############################################################
# Security Group
#   Generated from AWS resource: sg-1b2de661
############################################################
ec2-securitygroup-1: EC2.SecurityGroup.new {
  description: "demo",
  ipPermissions: [
    EC2.IpPermission.new {
      fromPort: 80,
      ipProtocol: "tcp",
      target: EC2.IpPermission.Target.all,
      toPort: 80,
    },
  ],
  ipPermissionsEgress: [
    EC2.IpPermission.new {
      fromPort: 0,
      ipProtocol: "-1",
      target: EC2.IpPermission.Target.all,
      toPort: 0,
    },
  ],
  tags: [
    AWS.tag("Name", "Composer"),
  ],
  vpc: ec2-vpc-1,
}


############################################################
# Instance
#   Generated from AWS resource: i-01f4746280effca2f
############################################################
ec2-instance-1: EC2.Instance.new {
  blockDeviceMappings: [
    EC2.InstanceBlockDeviceMapping.new {
      deviceName: "/dev/sda1",
      ebs: EC2.EbsInstanceBlockDevice.new {
        deleteOnTermination: True,
        volume: EC2.Volume.external("vol-02308572169c80958", region),
      },
    },
  ],
  ebsOptimized: False,
  image: "ami-ea1bb38a",
  instanceType: EC2.T2_micro,
  keyName: "sageDebugKey",
  monitoring: False,
  securityGroups: [
      ec2-securitygroup-1,
  ],
  sourceDestCheck: True,
  subnet: ec2-subnet-1,
  tags: [
    AWS.tag("Name", "Composer"),
  ],
}


