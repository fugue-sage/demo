import Fugue.AWS.AutoScaling as AutoScaling
import Fugue.AWS.EC2 as EC2
import Fugue.AWS as AWS

validate validateInstanceType
validate usWestOnly
validate requireStandardTagsOnAutoScalingAutoScaleGroups
validate requireStandardTagsOnEC2SecurityGroups

requiredTags: [
  "Name",
  "Application"
]


fun validateInstanceType(instanceType: EC2.InstanceType) -> Validation:
  case instanceType of
    | EC2.T2_micro  -> Validation.success
    | EC2.T2_small  -> Validation.success
    | EC2.T2_medium -> Validation.success
    | _ -> Validation.failure("Failed Compliance Validation: Must be a valid EC2 instance type. Please see InfoSec.\n")


fun usWestOnly(region: AWS.Region) -> Validation:
  case region of
    | AWS.Us-west-1 -> Validation.success
    | AWS.Us-west-2 -> Validation.success
    | _             -> Validation.failure("Invalid Region: Everything must run in Us-west-1 or Us-west-2 only\n")


### TAG FUNCTIONS

fun includesRequiredTags(tags: List<AWS.Tag>) -> Bool:
  let fun includesTag(key: String) -> Bool:
    List.any(fun(t): AWS.Tag.key(t) == key && String.length(AWS.Tag.value(t)) > 0, tags)
  List.all(includesTag, requiredTags)

fun requireStandardTags(tags: List<AWS.Tag>) -> Validation:
  if includesRequiredTags(tags) then Validation.success
  else
    let requiredList: String.join("\n", ["    - " ++ t for t in requiredTags])
    Validation.failure("All taggable resources must have the following tags:\n" ++ requiredList ++ "\n")

fun requireStandardTagsOnAutoScalingAutoScaleGroups(autoScalingGroup: AutoScaling.AutoScalingGroup) -> Validation:
  let tags: Optional.unpack([], autoScalingGroup.(AutoScaling.AutoScalingGroup).tags)
  requireStandardTags(tags)

fun requireStandardTagsOnEC2SecurityGroups(securityGroup: EC2.SecurityGroup) -> Validation:
  let tags: Optional.unpack([], securityGroup.(EC2.SecurityGroup).tags)
  requireStandardTags(tags)