import Fugue.AWS.AutoScaling as AutoScaling
import Fugue.AWS.EC2 as EC2
import Fugue.AWS as AWS


# Register the validations
validate validateInstanceType
validate usWestOnly
validate allowInboundSshInApprovedEnvironmentsOnly

# validate EC2 instance types
fun validateInstanceType(instanceType: EC2.InstanceType) -> Validation:
  case instanceType of
    | EC2.T2_micro  -> Validation.success
    | EC2.T2_small  -> Validation.success
    | EC2.T2_medium -> Validation.success
    | _ -> Validation.failure("Failed Compliance Validation: Must be a valid EC2 instance type. Please see InfoSec.\n")

# validate approved AWS regions
fun usWestOnly(region: AWS.Region) -> Validation:
  case region of
    | AWS.Us-west-1 -> Validation.success
    | AWS.Us-west-2 -> Validation.success
    | _             -> Validation.failure("Invalid Region: Everything must run in Us-west-1 or Us-west-2 only\n")


fun allowInboundSshInApprovedEnvironmentsOnly(sg: EC2.SecurityGroup) -> Validation:
  case sg.(EC2.SecurityGroup).ipPermissions of
    | None           -> Validation.success
    | Optional rules -> if List.any(allowsSsh, rules) then Validation.failure("Inbound SSH access (port 22) is not allowed outside of the DEV environment.")
                        else Validation.success

# Returns True if the given IpPermission allows SSH (port 22) access.
fun allowsSsh(rule: EC2.IpPermission) -> Bool:
  case rule.(EC2.IpPermission).ipProtocol of
    | "-1"  -> True
    | "udp" -> False
    | "tcp" -> let fromPort: rule.(EC2.IpPermission).fromPort
               let toPort: rule.(EC2.IpPermission).toPort
               (fromPort <= 22) && (toPort >= 22)
    | _     -> False
