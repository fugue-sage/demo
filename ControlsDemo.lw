composition

import Fugue.AWS as AWS
import Fugue.AWS.DynamoDB as DynamoDB
import Fugue.AWS.EC2 as EC2
import Fugue.AWS.S3 as S3

#import Policies

region: AWS.Us-west-2

# dynamodb-table-1: DynamoDB.Table.new {
#   attributes: {
#     "MobileAppKey": DynamoDB.S,
#   },
#   name: "MobileAppTable",
#   provisionedThroughput: {
#     read: 5,
#     write: 5,
#   },
#   region: region,
#   schema: {
#     "MobileAppTableKey": DynamoDB.HASH,
#   },
# }

ec2-dhcpoptions-1: EC2.DhcpOptions.new {
  domainName: "us-west-2.compute.internal",
  domainNameServers: [
    "AmazonProvidedDNS",
  ],
  region: region,
  tags: [
    AWS.tag("Name", "MobileApp"),
  ],
}

ec2-instance-1: EC2.Instance.newWithNetworkInterfaces {
  disableApiTermination: False,
  ebsOptimized: False,
  image: "ami-0a00ce72",
  instanceType: EC2.T2_micro,
  monitoring: False,
  primaryNetworkInterface: EC2.PrimaryInstanceNetworkInterface {
    associatePublicIpAddress: False,
    description: "Primary network interface",
    privateIpAddress: "10.0.1.121",
    securityGroups: [
          ec2-securitygroup-1,
    ],
    sourceDestCheck: True,
    subnet:   ec2-subnet-1,
  },
  rootBlockDevice: EC2.RootBlockDevice.new {
    tags: [
      AWS.tag("Name", "MobileApp"),
    ],
    volumeSize: 8,
    volumeType: EC2.Gp2,
  },
  tags: [
    AWS.tag("Name", "MobileApp"),
  ],
}


ec2-internetgateway-1: EC2.InternetGateway.new {
  region: region,
  tags: [
    AWS.tag("Name", "MobileApp"),
  ],
  vpc: ec2-vpc-1,
}


ec2-routetable-1: EC2.RouteTable.new {
  associations: [
      ec2-subnet-1,
  ],
  tags: [
    AWS.tag("Name", "MobileApp"),
  ],
  vpc: ec2-vpc-1,
}

ec2-securitygroup-1: EC2.SecurityGroup.new {
  description: "for MobileApp demo",
  ipPermissions: [
    EC2.IpPermission.http(EC2.IpPermission.Target.all),
    EC2.IpPermission.https(EC2.IpPermission.Target.all),
    #EC2.IpPermission.ssh(EC2.IpPermission.Target.all),
  ],
  tags: [
    AWS.tag("Name", "MobileApp"),
  ],
  vpc: ec2-vpc-1,
}


ec2-subnet-1: EC2.Subnet.new {
  availabilityZone: AWS.B,
  cidrBlock: "10.0.1.0/24",
  defaultForAz: False,
  mapPublicIpOnLaunch: False,
  tags: [
    AWS.tag("Name", "MobileApp"),
  ],
  vpc: ec2-vpc-1,
}


ec2-vpc-1: EC2.Vpc.new {
  cidrBlock: "10.0.0.0/16",
  dhcpOptions: ec2-dhcpoptions-1,
  enableDnsHostnames: False,
  enableDnsSupport: True,
  instanceTenancy: EC2.DefaultTenancy,
  region: region,
  tags: [
    AWS.tag("Name", "MobileApp"),
  ],
}

s3-bucket-1: S3.Bucket.new {
  acl: S3.Private,
  name: "health-app-087820496137",
  region: region,
  policy: S3.Bucket.Policy.SSE.kms("health-app-087820496137"),
  tags: [
    AWS.tag("Name", "HealthApp"),
  ],
}

