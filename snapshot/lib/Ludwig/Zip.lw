# This module provides support for creating zip archives within Ludwig.
@language("no-prelude")

import Ludwig.Optional as Optional

# Create zip archive from filepaths.  In order to deterministically generate ZIP
# files, we do not take modification timestamps of files into account.
#
# Example:
#
#     bytes: zip{filePaths: ["js/"]} # will add all files in the js/ directory
#     bytes: zip{filePaths: ["js/slackbot.js", "README.md"], recursive:False}
#
# @arg filePaths The paths of the files to put into the archive.
# @arg recursive Recurse into directories and add files.  The default is True.
#
# @return The contents of the zip archive file.
fun zip{filePaths: List<String>, recursive: Optional<Bool>} -> Bytes:
    let recur: Optional.unpack(True, recursive)
    __Ludwig_Zip_zip(filePaths, recur)
